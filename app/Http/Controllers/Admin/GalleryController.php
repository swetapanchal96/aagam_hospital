<?phpnamespace App\Http\Controllers\Admin;use App\Http\Controllers\Controller;use Illuminate\Http\Request;use App\Models\Gallery;use App\Models\Category;use Illuminate\Support\Facades\DB;class GalleryController extends Controller{    public function index(Request $request)    {         try{            $service=Category::where(['iStatus' => 1, 'isDelete' => 0])->get();            $datas = Gallery::select('gallery.*',DB::raw('(select category.category_name from  category where  category.category_id=gallery.serviceId limit 1) as serviceName'))->where(['iStatus' => 1, 'isDelete' => 0])->orderBy('galleryId','desc')->paginate(env('PER_PAGE_COUNT'));                        return view('admin.gallery.index', compact('datas','service'));        } catch (\Exception $e) {        report($e);        return false;            }    }    public function store(Request $request)    {        $request->validate([            'strPhoto' => 'required|image|max:1024', // Max size set to 1MB (1024KB)        ]);        try{        $img = "";        if ($request->hasFile('strPhoto')) {            $root = $_SERVER['DOCUMENT_ROOT'];            $image = $request->file('strPhoto');            $img = time() . '.' . $image->getClientOriginalExtension();            $mimeType = $image->getMimeType();            $size=  list($width, $height) = getimagesize($image);            $imgsize=$size[0].'x'.$size[1];            $destinationpath = $root . '/Gallery/';            if (!file_exists($destinationpath)) {                mkdir($destinationpath, 0755, true);            }            $image->move($destinationpath, $img);        }        $update = Gallery::create([            'serviceId' => $request->service,            'strPhoto' => $img,        ]);        return back()->with('success', 'Gallery Uploaded Successfully.');        } catch (\Exception $e) {        report($e);         return false;        }    }    public function editview(Request $request, $id)    {        try        {                $data['services'] = Category::where(['iStatus' => 1, 'isDelete' => 0])->get();        // Fetch gallery data        $data['gallery'] = Gallery::where(['iStatus' => 1, 'isDelete' => 0, 'galleryId' => $id])->first();        echo json_encode($data);        } catch (\Exception $e) {               report($e);             return false;        }    }    public function update(Request $request)    {        // try{             $img = "";            if ($request->hasFile('photo'))             {                $root = $_SERVER['DOCUMENT_ROOT'];                $image = $request->file('photo');                $img = time() . '.' . $image->getClientOriginalExtension();                $destinationpath = $root . '/Gallery/';                if (!file_exists($destinationpath)) {                    mkdir($destinationpath, 0755, true);                }                $image->move($destinationpath, $img);                $oldImg = $request->input('hiddenImage') ? $request->input('hiddenImage') : null;                if ($oldImg != null || $oldImg != "") {                    if (file_exists($destinationpath . $oldImg)) {                        unlink($destinationpath . $oldImg);                    }                }            } else {                $oldImg = $request->input('hiddenImage');                $img = $oldImg;            }        $update = DB::table('gallery')            ->where(['iStatus' => 1, 'isDelete' => 0, 'galleryId' => $request->id])            ->update([                    'serviceId' => $request->service,                    'strPhoto' => $img                ]);        return back()->with('success', 'Gallery Updated Successfully.');            // } catch (\Exception $e) {        //         report($e);                 //         return false;        //     }    }    public function delete(Request $request)    {        try        {            $delete = DB::table('gallery')->where(['iStatus' => 1, 'isDelete' => 0, 'galleryId' => $request->galleryId ])->first();            $root = $_SERVER['DOCUMENT_ROOT'];            $destinationpath = $root . '/Gallery/';            $filePath = $destinationpath . $delete->strPhoto;            if (file_exists($filePath))             {            if ($delete->strPhoto) {                unlink($destinationpath  . $delete->strPhoto);            }        }            Gallery::where(['iStatus' => 1, 'isDelete' => 0, 'galleryId' => $request->galleryId ])->delete();            return back()->with('success', 'Gallery Deleted Successfully!.');            } catch (\Exception $e) {                   report($e);                   return false;            }    }}